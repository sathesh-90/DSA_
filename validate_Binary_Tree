# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

class Solution(object):
    def isValidBST(self, root):
        self.prev = None  # To store previously visited node in inorder traversal

        def inorder(node):
            if not node:
                return True

            # Left subtree
            if not inorder(node.left):
                return False

            # Current node should be greater than previous node
            if self.prev is not None and node.val <= self.prev:
                return False

            # Update prev
            self.prev = node.val

            # Right subtree
            return inorder(node.right)

        return inorder(root)
